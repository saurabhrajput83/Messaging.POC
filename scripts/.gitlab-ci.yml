image: dotnet-framework

default:
  tags:
    - dotnet-framework

variables:
  stage1: build
  stage2: test
  stage3: deploy
  NUGET_PATH: 'C:\Nuget\nuget.exe'
  MSBUILD_PATH: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Current\Bin\msbuild.exe'
  REVIEWS_API_DEPLOY_FOLDER: 'D:\Source\Builds\Reviews.API'
  REVIEWS_ADMIN_API_DEPLOY_FOLDER: 'D:\Source\Builds\Reviews.Admin.API'

stages:
  - build
  - test
  - deploy

build_reviews_api_job:
  stage: build
  before_script:
    - cd Reviews
    - echo "Nuget restore start"
    - '& "$env:NUGET_PATH" restore "Reviews.sln"'
    - echo "Nuget restore end"
    - cd Reviews.API
  script:
    - echo "Build Reviews.API start"
    - '& "$env:MSBUILD_PATH" "Reviews.API.csproj" -t:Build /p:Configuration=Release'
    - echo "Build Reviews.API end"
  artifacts:
    expire_in: 1 week  # save gitlab server space, we copy the files we need to deploy folder later on
    paths:
      - 'Reviews\Reviews.API\bin\'
  after_script:
    - cd ..
    - cd ..

build_reviews_admin_api_job:
  stage: build
  needs: ["build_reviews_api_job"]
  before_script:
    - cd Reviews
    - echo "Nuget restore start"
    - '& "$env:NUGET_PATH" restore "Reviews.sln"'
    - echo "Nuget restore end"
    - cd Reviews.Admin.API
  script:
    - echo "Build Reviews.Admin.API start"
    - '& "$env:MSBUILD_PATH" "Reviews.Admin.API.csproj" -t:Build /p:Configuration=Release'
    - echo "Build Reviews.Admin.API end"
  artifacts:
    expire_in: 1 week  # save gitlab server space, we copy the files we need to deploy folder later on
    paths:
      - 'Reviews\Reviews.Admin.API\bin\'
  after_script:
    - cd ..
    - cd ..
    

test_job:
  stage: test
  script:
    - echo "This is ${stage2} job"

deploy_reviews_api_job:
  stage: deploy
  script:
    - '$deployFolder = $($env:REVIEWS_API_DEPLOY_FOLDER)'
    - 'Remove-Item -Path "$deployFolder" -Force -Recurse'
    - 'mkdir "$deployFolder"'
    # xcopy takes care of recursively creating required folders
    - 'xcopy /y ".\Reviews\Reviews.API\bin\" "$deployFolder"'
  dependencies:
    - build_reviews_api_job
    - test_job
  environment: development

deploy_reviews_admin_api_job:
  stage: deploy
  script:
    - '$deployFolder = $($env:REVIEWS_ADMIN_API_DEPLOY_FOLDER)'
    - 'Remove-Item -Path "$deployFolder" -Force -Recurse'
    - 'mkdir "$deployFolder"'
    # xcopy takes care of recursively creating required folders
    - 'xcopy /y ".\Reviews\Reviews.Admin.API\bin\" "$deployFolder"'
  dependencies:
    - build_reviews_admin_api_job
    - test_job
  environment: development

